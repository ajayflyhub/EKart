// <auto-generated />
using System;
using AjayDemoEcart.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AjayDemoEcart.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250115125558_SeedProductData")]
    partial class SeedProductData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AjayDemoEcart.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("AjayDemoEcart.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AjayDemoEcart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Description = "Ergonomic wireless mouse with a sleek design.",
                            ImageURL = "https://example.com/images/wireless-mouse.jpg",
                            Name = "Wireless Mouse",
                            Price = 25.99m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 12,
                            Description = "RGB mechanical gaming keyboard with customizable keys.",
                            ImageURL = "https://example.com/images/gaming-keyboard.jpg",
                            Name = "Gaming Keyboard",
                            Price = 79.99m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 13,
                            Description = "Noise-canceling Bluetooth headphones with superior sound quality.",
                            ImageURL = "https://example.com/images/bluetooth-headphones.jpg",
                            Name = "Bluetooth Headphones",
                            Price = 99.99m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 14,
                            Description = "Adjustable laptop stand to help reduce neck strain.",
                            ImageURL = "https://example.com/images/laptop-stand.jpg",
                            Name = "Laptop Stand",
                            Price = 19.99m,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 15,
                            Description = "Fast charging USB-C cable with durable design.",
                            ImageURL = "https://example.com/images/smartphone-charger.jpg",
                            Name = "Smartphone Charger",
                            Price = 9.99m,
                            Quantity = 150
                        },
                        new
                        {
                            Id = 16,
                            Description = "27-inch 4K UHD monitor with vibrant colors and high resolution.",
                            ImageURL = "https://example.com/images/4k-monitor.jpg",
                            Name = "4K Monitor",
                            Price = 299.99m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 17,
                            Description = "1TB external hard drive for secure data storage.",
                            ImageURL = "https://example.com/images/external-hard-drive.jpg",
                            Name = "External Hard Drive",
                            Price = 49.99m,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 18,
                            Description = "Fitness tracking smartwatch with heart rate monitoring.",
                            ImageURL = "https://example.com/images/smartwatch.jpg",
                            Name = "Smartwatch",
                            Price = 149.99m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 19,
                            Description = "Extra-large, smooth surface for gaming precision.",
                            ImageURL = "https://example.com/images/gaming-mousepad.jpg",
                            Name = "Gaming Mousepad",
                            Price = 15.99m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 20,
                            Description = "Compact wireless earbuds with crystal clear sound.",
                            ImageURL = "https://example.com/images/wireless-earbuds.jpg",
                            Name = "Wireless Earbuds",
                            Price = 59.99m,
                            Quantity = 200
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AjayDemoEcart.Models.Order", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
